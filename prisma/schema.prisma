// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model File {
  id       Int    @id @default(autoincrement())
  filePath String
  fileName String
  type     String
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  email        String?  @unique
  passwordHash String
  role         String   @default("moderator")
}

model TechGroup {
  id      String    @id @default(uuid())
  name    String    @unique
  tech    Tech[]
  techImg TechImg[]
}

model Tech {
  id          String     @id @default(uuid())
  name        String
  quant       Int
  TechGroup   TechGroup? @relation(fields: [techGroupId], references: [id])
  techGroupId String?
}

model TechImg {
  id          String     @id @default(uuid())
  name        String
  img         String
  TechGroup   TechGroup? @relation(fields: [techGroupId], references: [id])
  techGroupId String?
}

model PhotoAlbum {
  id     String @id @default(uuid())
  name   String @unique
  thumb  String
  images Img[]
}

model Img {
  id           String      @id @default(uuid())
  name         String
  filePath     String
  PhotoAlbum   PhotoAlbum? @relation(fields: [photoAlbumId], references: [id])
  photoAlbumId String?
}

model Review {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  email     String
  text      String
}

model SLink {
  id       String  @id @default(uuid())
  link     String  @unique
  text     String
  parentId String?
  child    SLink[] @relation("Hierarchy")
  parent   SLink?  @relation("Hierarchy", fields: [parentId], references: [id])
}

model News {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  body      String
  name      String
}
